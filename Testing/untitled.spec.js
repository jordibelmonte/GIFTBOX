// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Untitled', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Testeo si funciona o no el sistema', async function() {

     // Logeo de usuario. Con nombre de cuenta y contraseña.
    
     await driver.get("http://localhost:3000")
     await driver.findElement(By.css("#headerContainer > div.headerUser.centerVerticalColumn > div.headerUserBottom.spaceBetween > a > div > p")).click()
     await driver.findElement(By.css("#root > div > div.editUsuario > div.modificarEmailUsuario > input[type=text]:nth-child(2)")).sendKeys("lucio_benedettelli@gmail.com")
     await driver.sleep(1000)
     await driver.findElement(By.css("#root > div > div.editUsuario > div.modificarEmailUsuario > div > input")).sendKeys("starwars2020")
     await driver.sleep(1000)
     await driver.findElement(By.css("#root > div > div.editUsuario > div.guardaCambioContraseña")).click()
     await driver.sleep(3000)
     await driver.findElement(By.css("#headerContainer > div.headerUser.centerVerticalColumn > div.headerUserBottom.spaceBetween > a > div > div > div > div > div > svg")).click()
     await driver.sleep(3000)
     //Primer prueba: Chequear si se puede llenar el formulario con campos vacios
     await driver.findElement(By.css("#root > div > div:nth-child(2) > div:nth-child(2) > div")).click()
     await driver.sleep(1000)
     assert(await driver.findElement(By.css(".errores > h2")).getText() == "¡Todos los campos son requeridos!")
     
    })


    it('Testeo si las passwords coinciden', async function() {
    await driver.get("http://localhost:3000")
    await driver.findElement(By.css("#headerContainer > div.headerUser.centerVerticalColumn > div.headerUserBottom.spaceBetween > a > div > p")).click()
    await driver.findElement(By.css("#root > div > div.editUsuario > div.modificarEmailUsuario > input[type=text]:nth-child(2)")).sendKeys("lucio_benedettelli@gmail.com")
    await driver.sleep(1000)
    await driver.findElement(By.css("#root > div > div.editUsuario > div.modificarEmailUsuario > div > input")).sendKeys("starwars2020")
    await driver.sleep(1000)
    await driver.findElement(By.css("#root > div > div.editUsuario > div.guardaCambioContraseña")).click()
    await driver.sleep(3000)
    await driver.findElement(By.css("#headerContainer > div.headerUser.centerVerticalColumn > div.headerUserBottom.spaceBetween > a > div > div > div > div > div > svg")).click()
    await driver.sleep(3000)

     // Segunda prueba: Chequear si la contraseña actual con la verificadora coinciden o no.
 
     await driver.findElement(By.css("#root > div > div:nth-child(2) > div:nth-child(2) > form > div:nth-child(1) > div > i")).click()
     await driver.sleep(1000)
     await driver.findElement(By.css("#root > div > div:nth-child(2) > div:nth-child(2) > form > div:nth-child(1) > input")).sendKeys("jedi2020")
     await driver.sleep(1000)
     await driver.findElement(By.css("#root > div > div:nth-child(2) > div:nth-child(2) > form > div:nth-child(2) > input")).sendKeys("jedi")
     await driver.sleep(1000)
     await driver.findElement(By.css("#root > div > div:nth-child(2) > div:nth-child(2) > form > div.cambiarPassword > div > input")).sendKeys("star")
     await driver.sleep(1000)
     assert(await driver.findElement(By.css(".errores > h2")).getText() == "¡Las contraseñas no coinciden!")
     
    })

    

    it('Testeo si todo esta OK', async function() {
      await driver.get("http://localhost:3000")
      await driver.findElement(By.css("#headerContainer > div.headerUser.centerVerticalColumn > div.headerUserBottom.spaceBetween > a > div > p")).click()
      await driver.findElement(By.css("#root > div > div.editUsuario > div.modificarEmailUsuario > input[type=text]:nth-child(2)")).sendKeys("lucio_benedettelli@gmail.com")
      await driver.sleep(1000)
      await driver.findElement(By.css("#root > div > div.editUsuario > div.modificarEmailUsuario > div > input")).sendKeys("starwars2020")
      await driver.sleep(1000)
      await driver.findElement(By.css("#root > div > div.editUsuario > div.guardaCambioContraseña")).click()
      await driver.sleep(3000)
      await driver.findElement(By.css("#headerContainer > div.headerUser.centerVerticalColumn > div.headerUserBottom.spaceBetween > a > div > div > div > div > div > svg")).click()
      await driver.sleep(3000)
  
     // Tercera prueba: Si se completan todos los campos. Y la contraseña actual con la verificadora coincide, 
     //se puede cambiar la contraseña..

     await driver.findElement(By.css("#root > div > div:nth-child(2) > div:nth-child(2) > form > div:nth-child(1) > div > i")).click()
     await driver.sleep(1000)
 
     await driver.findElement(By.css("#root > div > div:nth-child(2) > div:nth-child(2) > form > div:nth-child(1) > input")).sendKeys("starwars2020")
     await driver.sleep(1000)
 
     await driver.findElement(By.css("#root > div > div:nth-child(2) > div:nth-child(2) > form > div:nth-child(2) > input")).sendKeys("starwars2020")
     await driver.sleep(1000)

     await driver.findElement(By.css("#root > div > div:nth-child(2) > div:nth-child(2) > form > div.cambiarPassword > div > input")).sendKeys("bootcamp2021")
     await driver.sleep(1000)
 
     await driver.findElement(By.css("#root > div > div:nth-child(2) > div:nth-child(2) > div")).click()
     await driver.sleep(1000)

     assert(await driver.findElement(By.css(".errores > h2")).getText() == "¡Se han guardado los cambios de manera exitosa!")
     

    })
    
   

  
})

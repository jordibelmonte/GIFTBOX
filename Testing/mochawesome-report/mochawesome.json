{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-12T05:07:34.626Z",
    "end": "2021-03-12T05:07:34.652Z",
    "duration": 26,
    "testsRegistered": 3,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 2,
    "hasOther": true,
    "skipped": 3,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "bfee5001-21d4-4d47-8bd8-2faf2d9b3b45",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "efbe8a1a-4fb8-4b4c-b494-3e71ba3c1424",
          "title": "GiftboxTesting",
          "fullFile": "C:\\Users\\franc\\Desktop\\GIFTBOX\\Testing\\GiftboxTesting.spec.js",
          "file": "\\GiftboxTesting.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook for \"Chequeo de campos vacios\"",
              "fullTitle": "GiftboxTesting \"before each\" hook for \"Chequeo de campos vacios\"",
              "timedOut": false,
              "duration": 4,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build()\nvars = {}",
              "err": {
                "message": "Error: The ChromeDriver could not be found on the current PATH. Please download the latest version of the ChromeDriver from http://chromedriver.storage.googleapis.com/index.html and ensure it can be found on your PATH.",
                "estack": "Error: The ChromeDriver could not be found on the current PATH. Please download the latest version of the ChromeDriver from http://chromedriver.storage.googleapis.com/index.html and ensure it can be found on your PATH.\n    at new ServiceBuilder (node_modules\\selenium-webdriver\\chrome.js:161:13)\n    at Function.getDefaultService (node_modules\\selenium-webdriver\\chrome.js:279:22)\n    at Function.createSession (node_modules\\selenium-webdriver\\chromium.js:598:49)\n    at Function.createSession (node_modules\\selenium-webdriver\\chrome.js:239:42)\n    at createDriver (node_modules\\selenium-webdriver\\index.js:148:33)\n    at Builder.build (node_modules\\selenium-webdriver\\index.js:698:16)\n    at Context.<anonymous> (GiftboxTesting.spec.js:10:55)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "c009908d-3aff-43cd-adf3-f9253c0a9f8b",
              "parentUUID": "efbe8a1a-4fb8-4b4c-b494-3e71ba3c1424",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook for \"Chequeo de campos vacios\"",
              "fullTitle": "GiftboxTesting \"after each\" hook for \"Chequeo de campos vacios\"",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {
                "message": "TypeError: Cannot read property 'quit' of undefined",
                "estack": "TypeError: Cannot read property 'quit' of undefined\n    at Context.<anonymous> (GiftboxTesting.spec.js:14:18)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "bf942643-3dd2-4fdc-b6af-3d009361f69b",
              "parentUUID": "efbe8a1a-4fb8-4b4c-b494-3e71ba3c1424",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Chequeo de campos vacios",
              "fullTitle": "GiftboxTesting Chequeo de campos vacios",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Logeo de usuario. Con nombre de cuenta y contraseña.\n    \n     await driver.get(\"http://localhost:3000\")\n     await driver.findElement(By.css(\"#headerContainer > div.headerUser.centerVerticalColumn > div.headerUserBottom.spaceBetween > a > div > p\")).click()\n     await driver.findElement(By.css(\"#root > div > div.editUsuario > div.modificarEmailUsuario > input[type=text]:nth-child(2)\")).sendKeys(\"lucio_benedettelli@gmail.com\")\n     await driver.sleep(1000)\n     await driver.findElement(By.css(\"#root > div > div.editUsuario > div.modificarEmailUsuario > div > input\")).sendKeys(\"bootcamp2023\")\n     await driver.sleep(1000)\n     await driver.findElement(By.css(\"#root > div > div.editUsuario > div.guardaCambioContraseña\")).click()\n     await driver.sleep(2000)\n     await driver.findElement(By.css(\"#headerContainer > div.headerUser.centerVerticalColumn > div.headerUserBottom.spaceBetween > a > div > div > div > div > div > svg\")).click()\n     await driver.sleep(2000)\n     //Primer prueba: Chequear si se puede llenar el formulario con campos vacios\n     await driver.findElement(By.css(\"#root > div > div:nth-child(2) > div:nth-child(2) > div\")).click()\n     await driver.sleep(1000)\n     assert(await driver.findElement(By.css(\".errores > h2\")).getText() == \"¡Todos los campos son requeridos!\")",
              "err": {},
              "uuid": "ca216014-b954-4ba5-8a59-601072bdc861",
              "parentUUID": "efbe8a1a-4fb8-4b4c-b494-3e71ba3c1424",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Testeo si las passwords coinciden",
              "fullTitle": "GiftboxTesting Testeo si las passwords coinciden",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:3000\")\nawait driver.findElement(By.css(\"#headerContainer > div.headerUser.centerVerticalColumn > div.headerUserBottom.spaceBetween > a > div > p\")).click()\nawait driver.findElement(By.css(\"#root > div > div.editUsuario > div.modificarEmailUsuario > input[type=text]:nth-child(2)\")).sendKeys(\"lucio_benedettelli@gmail.com\")\nawait driver.sleep(1000)\nawait driver.findElement(By.css(\"#root > div > div.editUsuario > div.modificarEmailUsuario > div > input\")).sendKeys(\"bootcamp2023\")\nawait driver.sleep(1000)\nawait driver.findElement(By.css(\"#root > div > div.editUsuario > div.guardaCambioContraseña\")).click()\nawait driver.sleep(2000)\nawait driver.findElement(By.css(\"#headerContainer > div.headerUser.centerVerticalColumn > div.headerUserBottom.spaceBetween > a > div > div > div > div > div > svg\")).click()\nawait driver.sleep(2000)\n // Segunda prueba: Chequear si la contraseña actual con la verificadora coinciden o no.\n \n await driver.findElement(By.css(\"#root > div > div:nth-child(2) > div:nth-child(2) > form > div:nth-child(1) > div > i\")).click()\n await driver.sleep(1000)\n await driver.findElement(By.css(\"#root > div > div:nth-child(2) > div:nth-child(2) > form > div:nth-child(1) > input\")).sendKeys(\"bootcamp2023\")\n await driver.sleep(1000)\n await driver.findElement(By.css(\"#root > div > div:nth-child(2) > div:nth-child(2) > form > div:nth-child(2) > input\")).sendKeys(\"bootcamp\")\n await driver.sleep(1000)\n await driver.findElement(By.css(\"#root > div > div:nth-child(2) > div:nth-child(2) > form > div.cambiarPassword > div > input\")).sendKeys(\"star\")\n await driver.sleep(1000)\n assert(await driver.findElement(By.css(\".errores > h2\")).getText() == \"¡Las contraseñas no coinciden!\")",
              "err": {},
              "uuid": "7db74d0a-28ec-46a8-b43c-aed1f404b040",
              "parentUUID": "efbe8a1a-4fb8-4b4c-b494-3e71ba3c1424",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Testeo si todo esta OK",
              "fullTitle": "GiftboxTesting Testeo si todo esta OK",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:3000\")\nawait driver.findElement(By.css(\"#headerContainer > div.headerUser.centerVerticalColumn > div.headerUserBottom.spaceBetween > a > div > p\")).click()\nawait driver.findElement(By.css(\"#root > div > div.editUsuario > div.modificarEmailUsuario > input[type=text]:nth-child(2)\")).sendKeys(\"lucio_benedettelli@gmail.com\")\nawait driver.sleep(1000)\nawait driver.findElement(By.css(\"#root > div > div.editUsuario > div.modificarEmailUsuario > div > input\")).sendKeys(\"bootcamp2023\")\nawait driver.sleep(1000)\nawait driver.findElement(By.css(\"#root > div > div.editUsuario > div.guardaCambioContraseña\")).click()\nawait driver.sleep(2000)\nawait driver.findElement(By.css(\"#headerContainer > div.headerUser.centerVerticalColumn > div.headerUserBottom.spaceBetween > a > div > div > div > div > div > svg\")).click()\nawait driver.sleep(2000)\n  \n     // Tercera prueba: Si se completan todos los campos. Y la contraseña actual con la verificadora coincide, \n     //se puede cambiar la contraseña..\n\n     await driver.findElement(By.css(\"#root > div > div:nth-child(2) > div:nth-child(2) > form > div:nth-child(1) > div > i\")).click()\n     await driver.sleep(1000)\n \n     await driver.findElement(By.css(\"#root > div > div:nth-child(2) > div:nth-child(2) > form > div:nth-child(1) > input\")).sendKeys(\"bootcamp2023\")\n     await driver.sleep(1000)\n \n     await driver.findElement(By.css(\"#root > div > div:nth-child(2) > div:nth-child(2) > form > div:nth-child(2) > input\")).sendKeys(\"bootcamp2023\")\n     await driver.sleep(1000)\n\n     await driver.findElement(By.css(\"#root > div > div:nth-child(2) > div:nth-child(2) > form > div.cambiarPassword > div > input\")).sendKeys(\"bootcamp2024\")\n     await driver.sleep(1000)\n \n     await driver.findElement(By.css(\"#root > div > div:nth-child(2) > div:nth-child(2) > div\")).click()\n     await driver.sleep(1000)\n\n     assert(await driver.findElement(By.css(\".errores > h2\")).getText() == \"¡Se han guardado los cambios de manera exitosa!\")",
              "err": {},
              "uuid": "54d8877e-aec1-45d0-87a0-bfa343cc4ea0",
              "parentUUID": "efbe8a1a-4fb8-4b4c-b494-3e71ba3c1424",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "ca216014-b954-4ba5-8a59-601072bdc861",
            "7db74d0a-28ec-46a8-b43c-aed1f404b040",
            "54d8877e-aec1-45d0-87a0-bfa343cc4ea0"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}